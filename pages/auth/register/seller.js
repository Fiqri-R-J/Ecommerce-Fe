/* eslint-disable @next/next/no-img-element */
import React from "react";
import Head from "next/head";
import style from "@/styles/pages/register.module.scss";
import Link from "next/link";
import axios from "axios";
import { setCookie, getCookie } from "cookies-next";
import { useRouter } from "next/router";

export default function RegSeller() {
  const router = useRouter();
  const [username, setUsername] = React.useState("");
  const [email, setEmail] = React.useState("");
  const [password, setPassword] = React.useState("");
  const [phone_number, setPhoneNumber] = React.useState("");
  const [store_name, setStoreName] = React.useState("");
  const [isLoading, setIsLoading] = React.useState(false);
  const [error, setError] = React.useState(null);
  const [success, setSuccess] = React.useState(false);

  const handleSubmit = async () => {
    try {
      setIsLoading(true);

      const connect = await axios.post("/api/regSeller", {
        username,
        email,
        password,
        phone_number,
        store_name,
      });

      setIsLoading(false);
      setError(null);
      setSuccess(true);
      router.push("/auth/login");
    } catch (error) {
      console.log(error?.response?.data?.message?.message);
      // error?.response?.data?.message?.username?.message
      if (error?.response?.data?.message?.username?.message) {
        setError(
          error?.response?.data?.message?.username?.message ??
            "Something wrong in our server"
        );
      } else if (error?.response?.data?.message?.email?.message) {
        setError(
          error?.response?.data?.message?.email?.message ??
            "Something wrong in our server"
        );
      } else if (error?.response?.data?.message?.password?.message) {
        setError(
          error?.response?.data?.message?.password?.message ??
            "Something wrong in our server"
        );
      } else if (error?.response?.data?.message?.phone_number?.message) {
        setError(
          error?.response?.data?.message?.phone_number?.message ??
            "Something wrong in our server"
        );
      } else if (error?.response?.data?.message?.store_name?.message) {
        setError(
          error?.response?.data?.message?.store_name?.message ??
            "Something wrong in our server"
        );
      } else if (error?.response?.data?.message?.message) {
        setError(
          error?.response?.data?.message?.message ??
            "Something wrong in our server"
        );
      } else {
        setError("Something wrong in our server");
      }
      setIsLoading(false);
    }
  };

  return (
    <>
      <Head>
        <title>Register | Blanja</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={style.main}>
        <section className={`container-fluid ${style.register}`}>
          <div className="container">
            <div className={`row`}>
              <div className={`col-12 pb-5 ${style.col}`}>
                {/* ICON */}
                <div className={`${style.icon}`}>
                  <img src="/images/icon-app.webp" alt="icon-app" />
                </div>
                <div className={`${style.order}`}>
                  <h5>Please sign up with your account</h5>
                </div>
                <div className={`${style.btn}`}>
                  <div
                    className="btn-group"
                    role="group"
                    aria-label="Basic radio toggle button group"
                  >
                    <Link
                      href={"/auth/register/customer"}
                      className={`btn btn-outline-primary rounded-start ${style.btnCustomer}`}
                    >
                      Customer
                    </Link>
                    <button
                      type="button"
                      className={`btn btn-primary rounded-end ${style.btnSeller}`}
                    >
                      Seller
                    </button>
                  </div>
                </div>
                {/* ALERT ERROR HANDLING */}
                <div className={style.errorHandling}>
                  <div className={`alert-error ${style.error}`}>
                    {error ? (
                      <div
                        class="alert alert-danger text-center mb-3"
                        role="alert"
                        style={{
                          fontSize: "14px",
                          border: "0",
                          borderRadius: "15px",
                          marginBottom: "-15px",
                        }}
                      >
                        {error}
                      </div>
                    ) : null}
                  </div>
                </div>
                {/* ALERT SUCCESS HANDLING */}
                <div className={style.errorHandling}>
                  <div className={`alert-error ${style.error}`}>
                    {!error && success ? (
                      <div
                        class="alert alert-success"
                        role="alert"
                        style={{
                          fontSize: "16px",
                          border: "0",
                          borderRadius: "15px",
                          padding: "13px 0 5px 0",
                        }}
                      >
                        <p className="text-center">Register successful</p>
                      </div>
                    ) : null}
                  </div>
                </div>
                <div className={`${style.form}`}>
                  <form>
                    <div className="mb-3">
                      <input
                        type="text"
                        class="form-control"
                        id="name"
                        aria-describedby="emailHelp"
                        placeholder="Name"
                        onChange={(e) => setUsername(e.target.value)}
                      />
                    </div>
                    <div className="mb-3">
                      <input
                        type="email"
                        class="form-control"
                        id="email"
                        aria-describedby="emailHelp"
                        placeholder="Email"
                        onChange={(e) => setEmail(e.target.value)}
                      />
                    </div>
                    <div className="mb-3">
                      <input
                        type="number"
                        class="form-control"
                        id="perusahaan"
                        aria-describedby="emailHelp"
                        placeholder="Phone number"
                        onChange={(e) => setPhoneNumber(e.target.value)}
                      />
                    </div>
                    <div className="mb-3">
                      <input
                        type="text"
                        class="form-control"
                        id="Jabatan"
                        aria-describedby="emailHelp"
                        placeholder="Store name"
                        onChange={(e) => setStoreName(e.target.value)}
                      />
                    </div>
                    <div className="mb-3">
                      <input
                        type="password"
                        class="form-control"
                        id="phone"
                        aria-describedby="emailHelp"
                        placeholder="Password"
                        onChange={(e) => setPassword(e.target.value)}
                      />
                    </div>
                  </form>
                </div>
                <div className={`d-grid gap-2 mb-4 ${style.btnRegister}`}>
                  <button
                    className="btn btn-warning"
                    type="button"
                    onClick={handleSubmit}
                    disabled={isLoading}
                  >
                    {isLoading ? "Loading..." : "Sign Up"}
                  </button>
                </div>
                <div className={`mt-3 register ${style.register}`}>
                  <p className="text-center">
                    Already have a Tokopedia account?{" "}
                    <Link
                      href={"/auth/login/seller"}
                      className={`${style.linkLogin}`}
                    >
                      Login
                    </Link>
                  </p>
                </div>
              </div>
            </div>
          </div>
        </section>
      </main>
    </>
  );
}
