/* eslint-disable @next/next/no-img-element */
import React, { Component } from "react";
import Head from "next/head";
import Image from "next/image";
import { Inter } from "@next/font/google";
import style from "@/styles/pages/homeStyle.module.scss";
import Link from "next/link";
import Navbar from "@/components/organisms/navbar";
import CardProductNew from "@/components/molecules/cardProductNew";
import CardProductPopular from "@/components/molecules/cardProductPopular";
import Footer from "@/components/organisms/footer";
import axios from "axios";
import { useRouter } from "next/router";
//REDUX
import * as productRedux from "@/store/reducer/product";
import { useDispatch } from "react-redux";

export default function Home(props) {
  const productListNew = props.productListNew;
  const productListPopular = props.productListPopular;

  const [productNew, setProductNew] = React.useState(productListNew.data);
  const [dataNotFound, setDataNotFound] = React.useState(false);
  const [subTitle, setSubTitle] = React.useState("");
  const [productPopular, setProductPopular] = React.useState(
    productListPopular.data
  );

  const router = useRouter();
  //REDUX
  const dispatch = useDispatch();

  const handleClickSlug = (slug) => {
    axios
      .get(`${process.env.NEXT_PUBLIC_BACKEND_URL}/products/${slug}`)
      .then(({ data }) => {
        console.log("response", data);
        dispatch(
          productRedux.setData({
            data: data?.data[0],
          })
        );
        router.push(`/product/${slug}`);
      });
  };

  // SORT BY CATEGORY
  const fetchBySort = (sortValue) => {
    if (sortValue) {
    }

    axios
      .get(
        `${process.env.NEXT_PUBLIC_BACKEND_URL}/products?sort=DESC&categoryFilter=${sortValue}`
      )
      .then(({ data }) => {
        setProductNew(data?.data);
        setDataNotFound(false);
      })
      .catch((err) => {
        // setProductNew("");
        setDataNotFound(true);
      });
    // .finally(() => setIsLoading(false));
  };

  // SORT BY CATEGORY COLOR
  const fetchByColor = (sortValue) => {
    if (sortValue) {
    }

    axios
      .get(
        `${process.env.NEXT_PUBLIC_BACKEND_URL}/products?sort=DESC&colorFilter=${sortValue}`
      )
      .then(({ data }) => {
        setProductNew(data?.data);
        setDataNotFound(false);
      })
      .catch((err) => {
        setDataNotFound(true);
      });
    // .finally(() => setIsLoading(false));
    const capitalize = (str) => {
      return str.replace(/(^\w|\s\w)/g, function (letter) {
        return letter.toUpperCase();
      });
    };
  };
  console.log("productNew---", productNew);
  return (
    <>
      <Head>
        <title>Home | Blanja</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={style.main}>
        <div className="container-fluid p-0">
          {/* NAVBAR */}
          <nav
            className={`container-fluid sticky-sm-top shadow py-2 ${style.containerNavbar}`}>
            <Navbar />
          </nav>
          {/* END OF NAVBAR */}

          {/* PROMOTION */}
          <section className={`container mt-5 ${style.category1}`}>
            <div className={style.item}>
              <img
                className={style.icon}
                src="/images/Card-Promotion2.webp"
                alt="icon-navbar"
                onClick={() => {
                  fetchByColor("black");
                  setSubTitle("Black Edition");
                }}
                onChange={(e) => {
                  fetchByColor(e.target.value);
                }}
              />
            </div>
            <div className={style.item}>
              <img
                className={style.icon}
                src="/images/Card-Promotion.webp"
                alt="icon-navbar"
                onClick={() => {
                  setProductNew(productListPopular.data);
                  setSubTitle("Trends In 2020");
                }}
                onChange={(e) => {
                  fetchByColor(e.target.value);
                }}
              />
            </div>
            <div className={style.item}>
              <img
                className={`rounded-2 ${style.icon}`}
                src="/images/white-edition.webp"
                alt="icon-navbar"
                style={{ width: "457px" }}
                onClick={() => {
                  fetchByColor("white");
                  setSubTitle("White Edition");
                }}
                onChange={(e) => {
                  fetchByColor(e.target.value);
                }}
              />
            </div>
            <style>
              {`
    ::-webkit-scrollbar {
      width: 0.1em;
      height: 0.5em;
    }
    ::-webkit-scrollbar-thumb {
      background-color: rgba(0, 0, 0, 0.2);
    }
  `}
            </style>
          </section>
          {/* END OF PROMOTION */}

          {/* CATEGORY */}
          <section className={`container mt-5 ${style.category2}`}>
            <div className={`${style.subTitle}`}>
              <h2>Category</h2>
              <p>What are you currently looking for</p>
            </div>
            <div className={`${style.content}`}>
              <div className={style.item}>
                <img
                  className={style.icon}
                  src="/images/all-product.webp"
                  alt="category-all-product"
                  style={{ width: "206px" }}
                  onClick={() => {
                    setProductNew(productListNew.data);
                    setSubTitle("");
                  }}
                  onChange={(e) => {
                    fetchBySort(e.target.value);
                  }}
                />
              </div>
              <div className={style.item}>
                <img
                  className={style.icon}
                  src="/images/t-shirt.webp"
                  alt="category-t-shirt"
                  onClick={() => {
                    fetchBySort("tshirt");
                    setSubTitle("T-Shirt");
                  }}
                  onChange={(e) => {
                    fetchBySort(e.target.value);
                  }}
                />
              </div>
              <div className={style.item}>
                <img
                  className={style.icon}
                  src="/images/shirt.webp"
                  alt="category-shirt"
                  style={{ width: "206px" }}
                  onClick={() => {
                    fetchBySort("shirt");
                    setSubTitle("Shirt");
                  }}
                  onChange={(e) => {
                    fetchBySort(e.target.value);
                  }}
                />
              </div>
              <div className={style.item}>
                <img
                  className={style.icon}
                  src="/images/shorts.webp"
                  alt="category-shorts"
                  onClick={() => {
                    fetchBySort("shorts");
                    setSubTitle("Shorts");
                  }}
                  onChange={(e) => {
                    fetchBySort(e.target.value);
                  }}
                />
              </div>
              <div className={style.item}>
                <img
                  className={style.icon}
                  src="/images/pants.webp"
                  alt="category-pants"
                  onClick={() => {
                    fetchBySort("pants");
                    setSubTitle("Pants");
                  }}
                  onChange={(e) => {
                    fetchBySort(e.target.value);
                  }}
                />
              </div>
              <div className={style.item}>
                <img
                  className={style.icon}
                  src="/images/headwear.webp"
                  alt="category-headwear"
                  style={{ width: "206px" }}
                  onClick={() => {
                    fetchBySort("headwear");
                    setSubTitle("Headwear");
                  }}
                  onChange={(e) => {
                    fetchBySort(e.target.value);
                  }}
                />
              </div>
              <div className={style.item}>
                <img
                  className={style.icon}
                  src="/images/outwear.webp"
                  alt="category-outwear"
                  style={{ width: "206px" }}
                  onClick={() => {
                    fetchBySort("outwear");
                    setSubTitle("Outwear");
                  }}
                  onChange={(e) => {
                    fetchBySort(e.target.value);
                  }}
                />
              </div>
              <div className={style.item}>
                <img
                  className={style.icon}
                  src="/images/footwear.webp"
                  alt="category-footwear"
                  style={{ width: "206px" }}
                  onClick={() => {
                    fetchBySort("footwear");
                    setSubTitle("Footwear");
                  }}
                  onChange={(e) => {
                    fetchBySort(e.target.value);
                  }}
                />
              </div>
              <div className={style.item}>
                <img
                  className={style.icon}
                  src="/images/bag.png"
                  alt="category-bag"
                  onClick={() => {
                    fetchBySort("bag");
                    setSubTitle("Bag");
                  }}
                  onChange={(e) => {
                    fetchBySort(e.target.value);
                  }}
                />
              </div>
            </div>
          </section>
          {/* END OF CATEGORY */}

          {/* NEW PRODUCT */}
          <section className={`container mt-5 ${style.Product}`}>
            {subTitle === "" ? (
              <div className={`${style.subTitle}`}>
                <h2>New</h2>
                <p>You’ve never seen it before!</p>
              </div>
            ) : (
              <div className={`${style.subTitle}`}>
                <h2>{subTitle}</h2>
                <p>Category of your choice</p>
              </div>
            )}

            <div className={`row ${style.content}`}>
              {/* <div className="col-3">
                <CardProduct />
              </div> */}
              {dataNotFound ? (
                <div style={{ marginBottom: "100px" }}>
                  <h2 className="text-center">Data not found</h2>
                  <p
                    className="text-center"
                    style={{ color: "#9B9B9B", fontSize: "14px" }}>
                    Product with category {subTitle} is empty
                  </p>
                </div>
              ) : (
                productNew?.map((item, key) => {
                  const convertNumber = item?.price.replace(
                    /\d(?=(\d{3})+$)/g,
                    "$&."
                  );

                  const capitalize = (str) => {
                    return str.replace(/(^\w|\s\w)/g, function (letter) {
                      return letter.toUpperCase();
                    });
                  };
                  return (
                    <React.Fragment key={key}>
                      <div
                        className="col-3 mb-4"
                        onClick={() => {
                          handleClickSlug(item?.slug);
                        }}>
                        <CardProductNew
                          img={item?.products_picture[0]?.product_picture}
                          productName={capitalize(item?.product_name)}
                          price={convertNumber}
                          storeName={item?.store_name}
                          avgReview={item?.avg_review}
                          getSlug={item?.slug}
                        />
                      </div>
                    </React.Fragment>
                  );
                })
              )}
            </div>
          </section>
          {/* END OF NEW PRODUCT */}

          {/* POPULAR */}
          <section className={`container mt-5 mb-5 ${style.Product}`}>
            <div className={`${style.subTitle}`}>
              <h2>Popular</h2>
              <p>Find clothes that are trending recently</p>
            </div>
            <div className={`row ${style.content}`}>
              {productPopular?.map((item, key) => {
                const convertNumber = item?.price.replace(
                  /\d(?=(\d{3})+$)/g,
                  "$&."
                );

                const capitalize = (str) => {
                  return str.replace(/(^\w|\s\w)/g, function (letter) {
                    return letter.toUpperCase();
                  });
                };

                return (
                  <React.Fragment key={key}>
                    <div
                      className="col-3 mb-4"
                      onClick={() => {
                        handleClickSlug(item?.slug);
                      }}>
                      <CardProductPopular
                        img={item?.products_picture[0]?.product_picture}
                        productName={capitalize(item?.product_name)}
                        price={convertNumber}
                        storeName={item?.store_name}
                        avgReview={item?.avg_review}
                      />
                    </div>
                  </React.Fragment>
                );
              })}
            </div>
          </section>
          {/* END OF POPULAR */}

          {/* FOOTER */}
          <Footer />
          {/* END OF FOOTER */}
        </div>
      </main>
    </>
  );
}

export async function getServerSideProps(context) {
  const productNew = await axios.get(
    `${process.env.NEXT_PUBLIC_BACKEND_URL}/products?page=1&limit=12&sort=DESC`
  );

  const productPopular = await axios.get(
    `${process.env.NEXT_PUBLIC_BACKEND_URL}/products?page=1&limit=12&sort=DESC&orderBy=popular`
  );

  const convertProductNew = productNew.data;
  const convertProductPopular = productPopular.data;

  return {
    props: {
      productListNew: convertProductNew,
      productListPopular: convertProductPopular,
    }, // will be passed to the page component as props
  };
}
